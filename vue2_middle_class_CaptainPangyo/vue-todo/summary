# Babel (https://babeljs.io/)

- 구 버전 브라우저 중에서는 EC6의 기능을 지원하지 않는 브라우저가 있으므로
  transpiling이 필요

- EC6의 문법을 각 브라우저의 호환 가능한 EC5로 변환하는 컴파일러

# const & let : 새로운 변수 선언 방식

- 블록 단위 { }로 변구의 범위가 제한되었음
- const : 한번 선언한 값에 대해서 변경할 수 없음(상수 개념)
- let : 한번 선언한 값에 대해서 다시 선언할 수 없음

# ES5 특징

## 1) 변수의 Scope

- 기존의 자바스크립트(ES5)는 { }에 상관없이 스코프가 설정됨.

## 2) Hoisting

- Hoisting이란 선언한 함수와 변수를 해석기가 가장 상단에 있는 것 처럼 인식한다.
- js 해석기는 코드의 라인 순서와 관계 없이 함수 선언식과 변수를 위한 메모리 공간을 먼저 확보한다.
- 따라서 sunction a() 와 var는 코드의 최상단으로 끌어 올려진 것(hoisted) 처럼 보인다.

# ES6 특징

## 1) { } 단위로 변수의 범위가 제한됨

## 2) const로 지정한 값 변경 불가능 (하지만 객체나 배열의 내부는 변경할 수 있다.)

# Arrow Function : 화살표 함수

- 함수를 정의할 때 function 이라는 키워드를 사용하지 않고 '=>'로 대체
- 흔히 사용하는 콜백 함수의 문법을 간결화

# Enhanced Object Literals : 향상된 객체 리터럴

- 객체의 속성을 메서드로 사용할 때 function 예약어를 생략하고 생성 가능
- 객체의 속성명과 값 명이 동일할 때 축약이 가능하다.

# Modules : 자바스크립트 모듈화 방법

- 자바스크립트 모듈 로더 라이브러리(AMD, Commons JS)기능을 js 언어 자체에서 지원
- 호출되기 전까지는 코드 실행과 동작을 하지 않는 특징이 있음.
- 재사용성이 뛰어난 기능들을 묶어서 필요할 때 마다 가져다 쓸 수 있도록 해줌.
